def project = 'web_admin'
def container_name = 'web_admin'
def deploy_user = 'ec2-user'
def image_port = '3000'
def container_port = '3000'
def server = "10.1.3.102"
def env = 'prod'
// def git = 'https://vveerasak@bitbucket.org/i3dev/kbank-energy-plus.git'
def git = 'git@bitbucket.org:i3dev/kbank-energy-plus.git'
def default_branch = 'master'
def clone_dir = 'web'

pipeline{
    agent{
        label 'prod-worker'
    }
    stages{
        stage('Checkout'){
            steps{
                script{
                    cleanWs()
                    sh "rm -rf ${clone_dir}"
                    sh "mkdir ${clone_dir}"
                    dir("./${clone_dir}"){
                        checkout([$class: 'GitSCM', 
                          branches: [[name: '*/master']], 
                          doGenerateSubmoduleConfigurations: false, 
                          extensions: [], 
                          submoduleCfg: [], 
                          userRemoteConfigs: [[url: "${git}", credentialsId: 'ubuntu_slave']]])
                    }   
                }
            }
        }
        stage("build"){
            steps{
                script{
                    dir("./${clone_dir}"){
                        sh """
cat > dockerfile << EOF
FROM node:18
WORKDIR /app
COPY . .
ENV API_URL=https://api.kgreenpass.com
ENV JWT_TOKEN=jwt-token
ENV SESSION_ID=session-id
ENV TOKEN_OTP=token-otp
ENV NEXT_PUBLIC_IS_DEVELOP=false
ENV NEXT_PUBLIC_IP_API_URL=https://api.ipify.org?format=json
ENV NEXT_PUBLIC_SITE_KEY=0x4AAAAAAAXeLaH1jogMoElZ
ENV SECRET_KEY=0x4AAAAAAAXeLTrh1CF55qgFhkCBHjMbo_g
ENV SITE_VERIFY_URL=https://challenges.cloudflare.com/turnstile/v0/siteverify
RUN npm install
RUN npm run build
EXPOSE 3000
CMD ["npm", "start"]
EOF
                    """
                        sh "docker build -f dockerfile -t ${container_name}:${env} ."
                    }
                }
            }
        }
        stage("Transfer Image"){
            steps{
                script{
                    sh "docker save -o ${container_name}.tar ${container_name}:${env}"
                    sh "scp ${container_name}.tar ${deploy_user}@${server}:~/${container_name}.tar"
                    sh "docker rmi ${container_name}:${env}"
                    sh "rm ${container_name}.tar"
                    sh "ssh ${deploy_user}@${server} 'docker load -i ${container_name}.tar'"
                }
            }
        }
        stage("run"){
            steps{
                script{
                    dir("./${clone_dir}"){
                        sh "ssh ${deploy_user}@${server} 'docker rm -f ${container_name} || true'"
                        sh """ssh ${deploy_user}@${server} 'docker run -itd --restart=always --name=${container_name} \
                            --log-driver=awslogs --log-opt awslogs-region=ap-southeast-1 --log-opt awslogs-group=${container_name}-${env} --log-opt awslogs-create-group=true \
                            -p ${container_port}:${image_port} \
                            ${container_name}:${env}'
                        """
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }

}